import java.util.Arrays;

public class LunarSleep{
	
	//this class file will hold the main
	static double errorCheck = 15;

	public static void main(String[] args){
		
		int[] sleepArray = new int[] {
			42864,62,77,364,30,
			42863,37,145,423,115,
			42862,61,64,295,77,
			42861,57,68,318,34,
			42860,68,54,306,54,
			42859,52,94,291,49,
			42858,75,65,259,85,
			42857,57,85,364,57,
			42894,50,60,288,92,
			42893,74,61,316,53,
			42892,54,62,199,77,
			42891,56,61,323,47,
			42890,54,49,352,33,
			42889,64,51,249,70,
			42888,36,59,319,73,
			42887,71,60,280,89,
			42886,73,92,285,48,
			42885,37,63,336,41,
			42884,85,76,246,94,
			42883,106,60,243,76,
			42882,113,61,301,66,
			42881,46,53,288,101,
			42879,54,36,286,50,
			42878,39,70,300,63,
			42877,54,125,478,94,
			42876,70,59,322,84,
			42875,65,57,286,103,
			42874,61,60,317,106,
			42873,72,57,265,74,
			42872,26,57,265,53,
			42871,75,47,220,68,
			42870,74,54,231,72,
			42869,60,69,260,139,
			42868,60,61,395,42,
			42867,21,62,264,47,
			42866,65,92,396,77,
			42865,48,55,269,73,
			42917,70,47,281,19,
			42916,68,76,219,113,
			42915,41,57,289,48,
			42914,27,57,296,33,
			42913,36,68,279,72,
			42912,51,56,293,62,
			42911,75,103,331,126,
			42910,83,73,312,71,
			42909,46,91,351,52,
			42908,77,63,362,74,
			42907,82,60,373,118,
			42906,51,84,340,113,
			42905,15,84,341,89,
			42904,63,53,280,110,
			42903,32,69,399,79,
			42902,21,69,278,86,
			42901,93,58,240,130,
			42900,59,46,273,86,
			42899,68,55,302,74,
			42898,59,63,283,77,
			42897,50,65,407,51,
			42896,46,61,293,60,
			42895,42,64,297,37,
			42954,93,42,270,80,
			42953,61,61,381,46,
			42952,87,65,285,82,
			42951,52,64,256,91,
			42950,86,45,214,81,
			42949,61,47,324,57,
			42948,52,49,244,78,
			42947,47,62,310,40,
			42946,75,69,351,126,
			42945,44,79,272,79,
			42942,66,90,336,70,
			42941,55,55,312,148,
			42940,65,40,228,31,
			42939,66,49,332,86,
			42938,67,67,279,146,
			42937,72,38,272,100,
			42936,62,50,243,109,
			42935,68,48,283,67,
			42934,78,41,257,96,
			42933,87,43,259,61,
			42932,57,48,294,72,
			42931,98,56,289,101,
			42930,70,48,295,79,
			42929,45,48,311,33,
			42928,29,76,335,7,
			42927,84,62,427,50,
			42926,51,61,277,72,
			42925,66,59,301,153,
			42982,38,82,285,75,
			42981,59,107,368,71,
			42980,36,56,314,44,
			42978,60,70,296,73,
			42977,60,58,287,55,
			42976,35,73,252,53,
			42973,61,61,341,95,
			42972,42,44,293,50,
			42971,64,63,239,56,
			42970,63,76,324,59,
			42969,61,68,265,84,
			42968,72,67,364,43,
			42966,73,98,430,58,
			42965,52,64,285,65,
			42964,31,61,321,66,
			42963,70,70,266,59,
			42962,47,87,304,0,
			42961,28,54,256,76,
			42960,53,73,397,93,
			42959,81,52,330,77,
			42958,69,52,321,37,
			42957,27,72,340,54,
			42956,75,59,256,113,
			42955,30,74,311,77,
			42989,78,79,280,48,
			42988,72,60,277,95,
			42987,62,59,279,24,
			42986,94,78,196,58,
			42985,83,71,314,50,
			43044,45,26,218,61,
			43043,70,67,346,82,
			43042,23,116,351,73,
			43041,46,78,358,27,
			43040,69,62,275,99,
			43039,94,60,215,75,
			43038,49,64,268,60,
			43037,40,119,261,96,
			43036,38,66,269,72,
			43035,48,61,321,40,
			43034,25,53,257,56,
			43033,32,73,255,45,
			43032,69,60,225,59,
			43031,58,58,250,69,
			43030,78,73,264,79,
			43029,45,68,301,102,
			43028,31,67,347,81,
			43027,33,47,205,77,
			43026,31,50,207,41,
			43025,23,87,264,47,
			43023,66,41,358,71,
			43022,70,99,354,82,
			43074,56,57,306,43,
			43073,50,44,232,73,
			43072,71,51,390,67,
			43071,57,45,279,68,
			43070,63,89,258,49,
			43069,38,60,279,39,
			43068,89,54,241,108,
			43067,58,64,270,68,
			43066,63,51,249,92,
			43065,59,130,358,72,
			43064,26,62,366,80,
			43063,38,97,323,33,
			43062,56,78,286,69,
			43061,68,65,297,33,
			43060,29,65,209,30,
			43059,53,74,308,50,
			43058,44,54,382,11,
			43057,73,43,278,111,
			43056,22,90,388,82,
			43055,68,65,345,41,
			43054,43,71,308,65,
			43053,50,43,340,43,
			43052,42,65,276,71,
			43051,40,61,372,106,
			43050,27,31,268,90,
			43049,44,41,287,87,
			43048,72,50,364,53,
			43047,39,59,297,39,
			43046,37,86,272,94,
			43045,61,42,281,77,
			43104,72,60,338,29,
			43103,22,70,355,65,
			43102,55,65,257,78,
			43101,64,53,212,70,
			43100,77,97,369,86,
			43098,53,76,305,59,
			43094,86,101,372,53,
			43093,88,94,248,63,
			43092,60,62,328,119,
			43091,63,43,230,40,
			43090,43,50,247,65,
			43089,53,79,330,69,
			43088,59,63,290,50,
			43087,46,72,276,54,
			43086,41,73,359,43,
			43085,63,60,305,49,
			43084,40,73,361,27,
			43083,70,72,271,52,
			43082,53,55,284,65,
			43081,61,86,291,73,
			43080,61,47,220,51,
			43079,79,67,223,82,
			43078,56,98,380,58,
			43077,26,77,288,43,
			43076,64,42,223,75,
			43075,40,69,296,41,
			43134,53,59,344,73,
			43133,86,53,269,21,
			43132,27,50,278,71,
			43131,47,53,282,57,
			43130,93,99,244,94,
			43129,70,79,284,59,
			43128,59,93,436,141,
			43127,91,76,342,86,
			43126,89,52,298,64,
			43125,50,58,330,30,
			43124,91,40,259,52,
			43123,57,68,329,60,
			43122,39,89,294,84,
			43121,25,65,366,55,
			43120,30,87,409,69,
			43119,58,62,197,47,
			43118,31,85,341,58,
			43116,62,81,353,132,
			43115,71,123,357,139,
			43114,69,70,340,116,
			43113,28,47,269,83,
			43112,65,56,269,97,
			43111,112,70,283,81,
			43110,72,62,313,31,
			43109,47,79,289,66,
			43108,35,81,330,62,
			43107,51,72,393,64,
			43106,96,68,322,68,
			43105,48,70,297,80,
			43164,57,80,246,68,
			43163,52,56,332,54,
			43162,71,83,243,99,
			43161,34,63,316,40,
			43160,62,102,295,48,
			43159,57,54,308,45,
			43158,69,59,268,60,
			43157,58,46,280,44,
			43154,63,56,323,25,
			43153,31,57,283,78,
			43152,70,61,293,57,
			43151,64,50,295,21,
			43150,54,88,353,46,
			43149,45,44,320,35,
			43148,72,56,267,63,
			43147,17,108,302,46,
			43145,53,55,283,55,
			43144,69,56,278,38,
			43143,67,62,284,65,
			43142,68,74,315,100,
			43141,63,55,314,50,
			43140,52,99,268,90,
			43139,25,61,304,61,
			43138,50,79,279,80,
			43137,56,64,298,48,
			43136,17,69,330,80,
			43135,82,69,285,113,
			43194,53,59,275,68,
			43193,71,66,269,81,
			43192,52,57,276,108,
			43191,37,66,332,16,
			43190,33,57,345,63,
			43189,44,60,344,97,
			43188,69,61,263,41,
			43187,75,67,232,80,
			43186,72,52,229,57,
			43185,41,59,325,38,
			43184,73,50,220,61,
			43183,66,54,274,99,
			43182,41,98,258,24,
			43181,83,63,279,24,
			43180,42,61,258,75,
			43179,78,65,301,25,
			43178,49,90,321,37,
			43177,82,80,324,62,
			43176,92,58,266,61,
			43175,56,47,286,63,
			43174,58,65,243,31,
			43173,58,46,285,47,
			43172,94,58,286,44,
			43171,73,58,244,54,
			43170,42,83,306,60,
			43169,66,43,270,15,
			43168,57,84,322,38,
			43167,70,62,312,45,
			43166,46,69,346,29,
			43165,58,65,301,6};

		DataToKeep db = new DataToKeep(sleepArray);
	
		SleepAverage soAve = new SleepAverage(db);

		SleepDifference soAveDiff = new SleepDifference(soAve);

		if(soAveDiff.getMaxDiffPhase() > errorCheck){
			soAve.printResults();
			soAveDiff.printResults();
		}
		else{
			System.out.println("no significant results");
		}

	}

}
